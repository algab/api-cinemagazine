import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.22'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
	id 'org.jetbrains.kotlinx.kover' version '0.7.6'
}

group = 'br.com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.0")
	set("coroutinesVersion", "1.8.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.8.0'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.5'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.5'
	implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'io.mockk', name: 'mockk-jvm', version: '1.13.10'
	testImplementation group: 'io.kotest', name: 'kotest-runner-junit5-jvm', version: '5.8.1'
	testImplementation group: 'io.kotest.extensions', name: 'kotest-extensions-spring', version: '1.1.3'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

koverReport {
	filters {
		includes {
			packages("br.com.cinemagazine")
		}
		excludes {
			packages("br.com.cinemagazine.constants", "br.com.cinemagazine.dto", "br.com.cinemagazine.documents")
			classes("br.com.cinemagazine.ApiCineMagazineApplication", "br.com.cinemagazine.ApiCineMagazineApplicationKt")
			annotatedBy("*InlineOnly*")
		}
	}
}
